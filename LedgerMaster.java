/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.nibbannews;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class LedgerMaster extends javax.swing.JFrame {

    /**
     * Creates new form LedgerMaster
     */
    public LedgerMaster() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_ledgerCrCode = new javax.swing.JLabel();
        txt_ledgerCode = new javax.swing.JTextField();
        lbl_ledgerCrName = new javax.swing.JLabel();
        txt_ledgerName = new javax.swing.JTextField();
        lbl_ledgerCrCode1 = new javax.swing.JLabel();
        lbl_ledgerCrName1 = new javax.swing.JLabel();
        txt_groupCode = new javax.swing.JTextField();
        txt_groupName = new javax.swing.JTextField();
        lbl_ledgerCrName2 = new javax.swing.JLabel();
        cb_TDSDeducted = new javax.swing.JComboBox<>();
        lbl_ledgerCrName3 = new javax.swing.JLabel();
        txt_basicExemtion = new javax.swing.JTextField();
        lbl_ledgerCrName4 = new javax.swing.JLabel();
        txt_openingBalance = new javax.swing.JTextField();
        txt_closingBalance = new javax.swing.JTextField();
        lbl_ledgerCrName5 = new javax.swing.JLabel();
        lbl_ledgerCrName6 = new javax.swing.JLabel();
        lbl_ledgerCrName7 = new javax.swing.JLabel();
        openingDate = new com.toedter.calendar.JDateChooser();
        closingDate = new com.toedter.calendar.JDateChooser();
        btn_createMaster = new javax.swing.JButton();
        btn_findMaster = new javax.swing.JButton();
        btn_updateMaster = new javax.swing.JButton();
        btn_deleteMaster = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ledger Master");

        jPanel1.setBackground(new java.awt.Color(52, 51, 52));

        lbl_ledgerCrCode.setBackground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrCode.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_ledgerCrCode.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrCode.setText("Ledger Code");

        txt_ledgerCode.setBackground(new java.awt.Color(52, 51, 52));
        txt_ledgerCode.setForeground(new java.awt.Color(255, 255, 255));
        txt_ledgerCode.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txt_ledgerCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ledgerCodeActionPerformed(evt);
            }
        });

        lbl_ledgerCrName.setBackground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_ledgerCrName.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName.setText("Ledger Name");

        txt_ledgerName.setBackground(new java.awt.Color(52, 51, 52));
        txt_ledgerName.setForeground(new java.awt.Color(255, 255, 255));
        txt_ledgerName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txt_ledgerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ledgerNameActionPerformed(evt);
            }
        });

        lbl_ledgerCrCode1.setBackground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrCode1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_ledgerCrCode1.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrCode1.setText("Group Code");

        lbl_ledgerCrName1.setBackground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_ledgerCrName1.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName1.setText("Group Name");

        txt_groupCode.setBackground(new java.awt.Color(52, 51, 52));
        txt_groupCode.setForeground(new java.awt.Color(255, 255, 255));
        txt_groupCode.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txt_groupCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_groupCodeActionPerformed(evt);
            }
        });

        txt_groupName.setBackground(new java.awt.Color(52, 51, 52));
        txt_groupName.setForeground(new java.awt.Color(255, 255, 255));
        txt_groupName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txt_groupName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_groupNameActionPerformed(evt);
            }
        });

        lbl_ledgerCrName2.setBackground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_ledgerCrName2.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName2.setText("Is TDS deducted");

        cb_TDSDeducted.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select", "Yes", "No" }));

        lbl_ledgerCrName3.setBackground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_ledgerCrName3.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName3.setText("Basic exemption limit, if any for TDS");

        txt_basicExemtion.setBackground(new java.awt.Color(52, 51, 52));
        txt_basicExemtion.setForeground(new java.awt.Color(255, 255, 255));
        txt_basicExemtion.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txt_basicExemtion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_basicExemtionActionPerformed(evt);
            }
        });

        lbl_ledgerCrName4.setBackground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_ledgerCrName4.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName4.setText("Opening Balance");

        txt_openingBalance.setBackground(new java.awt.Color(52, 51, 52));
        txt_openingBalance.setForeground(new java.awt.Color(255, 255, 255));
        txt_openingBalance.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txt_openingBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_openingBalanceActionPerformed(evt);
            }
        });

        txt_closingBalance.setBackground(new java.awt.Color(52, 51, 52));
        txt_closingBalance.setForeground(new java.awt.Color(255, 255, 255));
        txt_closingBalance.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txt_closingBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_closingBalanceActionPerformed(evt);
            }
        });

        lbl_ledgerCrName5.setBackground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_ledgerCrName5.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName5.setText("Closing Balance");

        lbl_ledgerCrName6.setBackground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_ledgerCrName6.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName6.setText("as on Date");

        lbl_ledgerCrName7.setBackground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_ledgerCrName7.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ledgerCrName7.setText("as on Date");

        openingDate.setBackground(new java.awt.Color(52, 51, 52));
        openingDate.setDateFormatString("dd/MM/ y");

        closingDate.setBackground(new java.awt.Color(52, 51, 52));
        closingDate.setDateFormatString("dd/MM/ y");

        btn_createMaster.setBackground(new java.awt.Color(52, 51, 52));
        btn_createMaster.setForeground(new java.awt.Color(255, 255, 255));
        btn_createMaster.setText("Create Ledger");
        btn_createMaster.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_createMaster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_createMasterActionPerformed(evt);
            }
        });

        btn_findMaster.setBackground(new java.awt.Color(52, 51, 52));
        btn_findMaster.setForeground(new java.awt.Color(255, 255, 255));
        btn_findMaster.setText("Find Ledger");
        btn_findMaster.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_findMaster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_findMasterActionPerformed(evt);
            }
        });

        btn_updateMaster.setBackground(new java.awt.Color(52, 51, 52));
        btn_updateMaster.setForeground(new java.awt.Color(255, 255, 255));
        btn_updateMaster.setText("Update Ledger");
        btn_updateMaster.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_updateMaster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateMasterActionPerformed(evt);
            }
        });

        btn_deleteMaster.setBackground(new java.awt.Color(52, 51, 52));
        btn_deleteMaster.setForeground(new java.awt.Color(255, 255, 255));
        btn_deleteMaster.setText("Delete Ledger");
        btn_deleteMaster.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_deleteMaster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteMasterActionPerformed(evt);
            }
        });

        btn_cancel.setBackground(new java.awt.Color(52, 51, 52));
        btn_cancel.setForeground(new java.awt.Color(255, 255, 255));
        btn_cancel.setText("Cancel");
        btn_cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_ledgerCrName)
                            .addComponent(lbl_ledgerCrCode)
                            .addComponent(lbl_ledgerCrName2)
                            .addComponent(lbl_ledgerCrName3)
                            .addComponent(lbl_ledgerCrCode1)
                            .addComponent(lbl_ledgerCrName1)
                            .addComponent(lbl_ledgerCrName4)
                            .addComponent(lbl_ledgerCrName5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_groupName, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_groupCode, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_basicExemtion, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_ledgerCode, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_TDSDeducted, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_ledgerName, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_openingBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_closingBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(80, 80, 80)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lbl_ledgerCrName6)
                                        .addGap(18, 18, 18)
                                        .addComponent(openingDate, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lbl_ledgerCrName7)
                                        .addGap(18, 18, 18)
                                        .addComponent(closingDate, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(btn_createMaster)
                        .addGap(18, 18, 18)
                        .addComponent(btn_findMaster)
                        .addGap(18, 18, 18)
                        .addComponent(btn_updateMaster)
                        .addGap(18, 18, 18)
                        .addComponent(btn_deleteMaster)
                        .addGap(18, 18, 18)
                        .addComponent(btn_cancel)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_ledgerCrCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_ledgerCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_ledgerCrName)
                            .addComponent(txt_ledgerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_ledgerCrCode1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txt_groupCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_ledgerCrName1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_groupName, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_ledgerCrName2)
                            .addComponent(cb_TDSDeducted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_ledgerCrName3)
                            .addComponent(txt_basicExemtion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_ledgerCrName4)
                            .addComponent(txt_openingBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_ledgerCrName5)
                            .addComponent(txt_closingBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_ledgerCrName6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(openingDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(lbl_ledgerCrName7, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(closingDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_updateMaster, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_findMaster, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_deleteMaster, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_createMaster, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(447, 447, 447))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_ledgerCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ledgerCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ledgerCodeActionPerformed

    private void txt_ledgerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ledgerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ledgerNameActionPerformed

    private void txt_groupCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_groupCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_groupCodeActionPerformed

    private void txt_groupNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_groupNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_groupNameActionPerformed

    private void txt_basicExemtionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_basicExemtionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_basicExemtionActionPerformed

    private void txt_openingBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_openingBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_openingBalanceActionPerformed

    private void txt_closingBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_closingBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_closingBalanceActionPerformed

    private void btn_createMasterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_createMasterActionPerformed
        // TODO add your handling code here:
        String ledgerCode = txt_ledgerCode.getText();
        String ledgerName = txt_ledgerName.getText();
        String groupCode = txt_groupCode.getText();
        String groupName = txt_groupName.getText();
        String TdsDeducted = cb_TDSDeducted.getSelectedItem().toString();
        String basicExemptionLimit = txt_basicExemtion.getText();
        String openingBalance = txt_openingBalance.getText();
        String closingBalance = txt_closingBalance.getText();
            
            java.util.Date openingBDate= openingDate.getDate();
            openingBDate.getTime();
            SimpleDateFormat openingDateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String openingBalanceDate = openingDateFormat.format(openingBDate.getTime());
            
            java.util.Date closingBDate= closingDate.getDate();
            closingBDate.getTime();
            SimpleDateFormat closingDateFormat = new SimpleDateFormat("dd/MM/y");
        String closingBalanceDate = closingDateFormat.format(closingBDate.getTime());
        
        try {
                DBConnection dbc = new DBConnection();
                Connection con = dbc.dbconnect();
                String queryCheck = "select * from ledger_master where ledgerCode=?";
                PreparedStatement stmt = con.prepareStatement(queryCheck);
                stmt.setString(1, txt_ledgerCode.getText());
                final ResultSet rs = stmt.executeQuery();
                // if this ID already exists, we quit
                if(rs.next()) {
                    con.close();
                    JOptionPane.showMessageDialog(this, "User already exit");
                    return;
                }else{
                String str = "insert into ledger_master values(?,?,?,?,?,?,?,?,?,?)";
                stmt = con.prepareStatement(str);
                stmt.setString(1, txt_ledgerCode.getText());
                stmt.setString(2, txt_ledgerName.getText());
                stmt.setString(3, txt_groupCode.getText());
                stmt.setString(4, txt_groupName.getText());
                String tdsDeducted_value = cb_TDSDeducted.getSelectedItem().toString();
                stmt.setString(5, tdsDeducted_value);
                stmt.setString(6, txt_basicExemtion.getText());
                stmt.setString(7, txt_openingBalance.getText());
                stmt.setString(8, txt_closingBalance.getText());
                stmt.setString(9, openingBalanceDate);
                stmt.setString(10, closingBalanceDate);
                stmt.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Master Generated Successfully.");
                }
                        txt_ledgerCode.setText("");
                        txt_ledgerName.setText("");
                        txt_groupCode.setText("");
                        txt_groupName.setText("");
                        cb_TDSDeducted.setSelectedIndex(0);
                        txt_basicExemtion.setText("");
                        txt_openingBalance.setText("");
                        txt_closingBalance.setText("");
                        openingDate.setCalendar(null);
                        closingDate.setCalendar(null);
                } 
                catch (SQLException ex) {
                    Logger.getLogger(LedgerMaster.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Master Not generated!");
            }
    }//GEN-LAST:event_btn_createMasterActionPerformed

    private void btn_findMasterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_findMasterActionPerformed
        // TODO add your handling code here:
        String ledgerCode = txt_ledgerCode.getText();
        if(ledgerCode.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Enter Ledger code to search the Ledger");
        }
        else{
        try {
            DBConnection dbc = new DBConnection();
            Connection con = dbc.dbconnect();
            String str = "select * from ledger_master where ledgerCode=?";
            PreparedStatement stmt = con.prepareStatement(str);
            stmt.setString(1, txt_ledgerCode.getText());
            ResultSet rs =  stmt.executeQuery();
            if(rs.next()){
                txt_ledgerName.setText(rs.getString("ledgerName"));
                txt_groupCode.setText(rs.getString("groupCode"));
                txt_groupName.setText(rs.getString("groupName"));
                String tdsDeducted_value = rs.getString("isTdsDeducted");
                cb_TDSDeducted.addItem(tdsDeducted_value);
                txt_basicExemtion.setText(rs.getString("basicExemtionLimit"));
                txt_openingBalance.setText(rs.getString("openingBalance"));
                txt_closingBalance.setText(rs.getString("closingBalance"));
                
                String obDate = rs.getString("openingBalanceDate");
                java.util.Date date1 = new SimpleDateFormat("dd/MM/yyyy").parse(obDate);
                openingDate.setDate(date1);
                
                String cbDate = rs.getString("closingBalanceDate");
                java.util.Date date2 = new SimpleDateFormat("dd/MM/yyyy").parse(cbDate);
                closingDate.setDate(date2);
            }
            else{
                JOptionPane.showMessageDialog(this, "NO Data found!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(LedgerMaster.class.getName()).log(Level.SEVERE, null, ex);
        }   catch (ParseException ex) {
                Logger.getLogger(LedgerMaster.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_btn_findMasterActionPerformed

    private void btn_updateMasterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateMasterActionPerformed
        // TODO add your handling code here:
        String ledgerCode = txt_ledgerCode.getText();
        String ledgerName = txt_ledgerName.getText();
        String groupCode = txt_groupCode.getText();
        String groupName = txt_groupName.getText();
        String TdsDeducted = cb_TDSDeducted.getSelectedItem().toString();
        String basicExemptionLimit = txt_basicExemtion.getText();
        String openingBalance = txt_openingBalance.getText();
        String closingBalance = txt_closingBalance.getText();
        
        java.util.Date openingBDate= openingDate.getDate();
        openingBDate.getTime();
        SimpleDateFormat openingDateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String openingBalanceDate = openingDateFormat.format(openingBDate.getTime());
            
        java.util.Date closingBDate= closingDate.getDate();
        closingBDate.getTime();
        SimpleDateFormat closingDateFormat = new SimpleDateFormat("dd/MM/y");
        String closingBalanceDate = closingDateFormat.format(closingBDate.getTime());
        
        if(ledgerCode.equals("") || ledgerName.equals("") || groupCode.equals("") || groupName.equals("") || TdsDeducted.equals("select") || 
                basicExemptionLimit.equals("") || openingBalanceDate.equals("") || closingBalanceDate.equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "No Data Found");
        }
        else{
            try {
                DBConnection dbc = new DBConnection();
                Connection con = dbc.dbconnect();
                String str = "Update ledger_master set ledgerName='"+txt_ledgerName.getText()+"',"
                        + "groupCode='"+txt_groupCode.getText()+"',"
                        + "groupName='"+txt_groupName.getText()+"',"
                        + "isTdsDeducted='"+cb_TDSDeducted.getSelectedItem()+"',"
                        + "basicExemtionLimit='"+txt_basicExemtion.getText()+"',"
                        + "openingBalance='"+txt_openingBalance.getText()+"',"
                        + "closingBalance='"+txt_openingBalance.getText()+"',"
                        + "openingBalanceDate='"+openingBalanceDate+"',"
                        + "closingBalanceDate='"+closingBalanceDate+"'where ledgerCode='"+txt_ledgerCode.getText()+"'";
                PreparedStatement stmt = con.prepareStatement(str);
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Voucher updated successfully");
                        txt_ledgerCode.setText("");
                        txt_ledgerName.setText("");
                        txt_groupCode.setText("");
                        txt_groupName.setText("");
                        cb_TDSDeducted.setSelectedIndex(0);
                        txt_basicExemtion.setText("");
                        txt_openingBalance.setText("");
                        txt_closingBalance.setText("");
                        openingDate.setCalendar(null);
                        closingDate.setCalendar(null);
                } catch (SQLException ex) {
                    Logger.getLogger(LedgerMaster.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
    }//GEN-LAST:event_btn_updateMasterActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        // TODO add your handling code here:
        //        new AccountMaster().setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_deleteMasterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteMasterActionPerformed
        // TODO add your handling code here:
        String ledgerCode = txt_ledgerCode.getText();
        String ledgerName = txt_ledgerName.getText();
        String groupCode = txt_groupCode.getText();
        String groupName = txt_groupName.getText();
        String TdsDeducted = cb_TDSDeducted.getSelectedItem().toString();
        String basicExemptionLimit = txt_basicExemtion.getText();
        String openingBalance = txt_openingBalance.getText();
        String closingBalance = txt_closingBalance.getText();
        
        java.util.Date openingBDate= openingDate.getDate();
            SimpleDateFormat openingDateFormat = new SimpleDateFormat("dd/MM/y");
        String openingBalanceDate = openingDateFormat.format(openingDate.getDate());
            
            java.util.Date closingBDate= closingDate.getDate();
            SimpleDateFormat closingDateFormat = new SimpleDateFormat("dd/MM/y");
        String closingBalanceDate = closingDateFormat.format(closingDate.getDate());
        if(ledgerCode.equals("") || ledgerName.equals("") || groupCode.equals("") || groupName.equals("") || TdsDeducted.equals("select") || 
                basicExemptionLimit.equals("") || openingBalanceDate.equals("") || closingBalanceDate.equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "No Data Found");
        }
        else{
                    try {
                            DBConnection dbc = new DBConnection();
                            Connection con = dbc.dbconnect();
                            String str = "Delete from ledger_master where ledgerCode='"+txt_ledgerCode.getText()+"'";
                            PreparedStatement stmt = con.prepareStatement(str);
                            stmt.executeUpdate();
                            JOptionPane.showMessageDialog(this, "Voucher record deleted successfully");
                                txt_ledgerCode.setText("");
                                txt_ledgerName.setText("");
                                txt_groupCode.setText("");
                                txt_groupName.setText("");
                                cb_TDSDeducted.setSelectedIndex(0);
                                txt_basicExemtion.setText("");
                                txt_openingBalance.setText("");
                                txt_closingBalance.setText("");
                                openingDate.setCalendar(null);
                                closingDate.setCalendar(null);
                            con.close();
                        } catch (SQLException ex) {
                            Logger.getLogger(LedgerMaster.class.getName()).log(Level.SEVERE, null, ex);
                        }
            }
    }//GEN-LAST:event_btn_deleteMasterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LedgerMaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LedgerMaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LedgerMaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LedgerMaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LedgerMaster().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_createMaster;
    private javax.swing.JButton btn_deleteMaster;
    private javax.swing.JButton btn_findMaster;
    private javax.swing.JButton btn_updateMaster;
    private javax.swing.JComboBox<String> cb_TDSDeducted;
    private com.toedter.calendar.JDateChooser closingDate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_ledgerCrCode;
    private javax.swing.JLabel lbl_ledgerCrCode1;
    private javax.swing.JLabel lbl_ledgerCrName;
    private javax.swing.JLabel lbl_ledgerCrName1;
    private javax.swing.JLabel lbl_ledgerCrName2;
    private javax.swing.JLabel lbl_ledgerCrName3;
    private javax.swing.JLabel lbl_ledgerCrName4;
    private javax.swing.JLabel lbl_ledgerCrName5;
    private javax.swing.JLabel lbl_ledgerCrName6;
    private javax.swing.JLabel lbl_ledgerCrName7;
    private com.toedter.calendar.JDateChooser openingDate;
    private javax.swing.JTextField txt_basicExemtion;
    private javax.swing.JTextField txt_closingBalance;
    private javax.swing.JTextField txt_groupCode;
    private javax.swing.JTextField txt_groupName;
    private javax.swing.JTextField txt_ledgerCode;
    private javax.swing.JTextField txt_ledgerName;
    private javax.swing.JTextField txt_openingBalance;
    // End of variables declaration//GEN-END:variables
}
